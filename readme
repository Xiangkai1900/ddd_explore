本项目是践行Domain driven design思路的demo
采用四层架构构建项目, 降低耦合度，隔离层次，降低依赖（上层无需关注下层具体实现）；

adapter
用户界面层  该层的主要职责是与外部用户（包括web服务、其他系统）交互。


application
应用层  定义了软件要完成的任务，并且指挥表达领域概念的对象来解决问题。


domain
领域层  主要负责表达业务概念，业务状态信息和业务规则。 Domain层是整个系统的核心层，几乎全部的业务逻辑会在该层实现。
        实体(Entities):具有唯一标识的对象
        值对象(Value Objects): 无需唯一标识
        领域服务(Domain Services): 一些行为无法归类到实体对象或值对象上，本质是一些操作，而非事物


infrastructure
基础设施层  为上面各层提供通用的技术能力：为应用层传递消息，为领域层提供持久化机制。
